# coding=utf-8
# Copyright 2016 Pants project contributors (see CONTRIBUTORS.md).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

from __future__ import (absolute_import, division, generators, nested_scopes, print_function,
                        unicode_literals, with_statement)


# config_list_parser_tab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B50BB045A93903346CE6377923695032'
    
_lr_action_items = {u'SINGLE_QUOTE_ITEM':([1,10,],[4,4,]),u'DOUBLE_QUOTE_ITEM':([1,10,],[7,7,]),u'LBRACKET':([0,],[1,]),u'COMMA':([4,6,7,],[-1,10,-2,]),u'RBRACKET':([1,4,5,6,7,11,],[8,-1,9,-5,-2,-6,]),'$end':([2,3,8,9,],[-7,0,-3,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {u'list':([0,],[2,]),u'expression':([0,],[3,]),u'item':([1,10,],[6,6,]),u'items':([1,10,],[5,11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  (u'item -> SINGLE_QUOTE_ITEM',u'item',1,'p_item_single_quote','config_list_parser.py',40),
  (u'item -> DOUBLE_QUOTE_ITEM',u'item',1,'p_item_single_quote','config_list_parser.py',41),
  (u'list -> LBRACKET RBRACKET',u'list',2,'p_list_empty','config_list_parser.py',47),
  (u'list -> LBRACKET items RBRACKET',u'list',3,'p_list_one_item','config_list_parser.py',52),
  (u'items -> item',u'items',1,'p_items_one','config_list_parser.py',57),
  (u'items -> item COMMA items',u'items',3,'p_items_multiple','config_list_parser.py',62),
  (u'expression -> list',u'expression',1,'p_expression','config_list_parser.py',67),
]
